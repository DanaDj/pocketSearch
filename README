                      ##############
                      #pocketSearch#
                      ##############

A program that combines the pocket detecting, nearest neighbor
algorithms of fpocket 3.1 with the Voronoi diagram building and
analysis programs, SURF/VASP to qualify good candidates for protein
engineering. The output of this program is a Rosetta pose file for
computational mutagenesis to further screen candidates for wet lab
mutagenesis, and catalysis analysis.

-------------
initialize.py
-------------
This script takes 3 mandatory, positional arguments at runtime. These do
not require any flags. The arguments are: 

1) the pdb (e.g. 1m1n.pdb or just 1m1n, either will work)
2) the directory containing the fpocket output of the pdb (Note: This
	isn't the actual fpocket pdb_out/ directory, just the filepath where
	this output directory can be found)
3) the number of the pocket from fpocket you are trying
    to match (e.g. 1)

The additional arguments are all parameters for conformation generation;
	all angles are in degrees, not radians:

the rotational degrees for precession (-r or --r_angle flag; 30 by default)
the tilt angle (-t or --t_angle flag; 10 by default)
the translational shift (-s or --shift flag; 2 by default)

---------------
pocketSearch.py
---------------
This script takes 3 mandatory, positional arguments at runtime. These do 
not require any flags. The arguments are:

1) the input directory (where the pdbs to be tested from rcsb are located)
2) the output directory (this is where the VASP outputs and the score file
    will be located after the run)
3) the initial directory (where the initial structures you are testing against
    are located, e.g. for testing rcsb against 1m1n.pdb, this is where the 1m1n
    conformations are located from the initialize scripts)

The additional arguments include:

mode of pdb download (-m or --mode flag; random or skip download; skip by default)
min alpha spheres in fpocket (-a or --alpha flag; 80 by default)
max alpha spheres (-c or --cutoff flag; 150 by default)
percent filter (-f or --filter flag; .7 by default)
hit filter (-ht or --hits flag; 1 by default)
number of random structures to download if -m random (-r or --rand flag; 100 by default)
minimal screen filter for initial screen (-s or --screen; 0.5 by default)
